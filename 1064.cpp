//1064 朋友数 (20 分)
//如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。
//例如123和51就是朋友数，因为1+2+3=5+1=6，而6就是它们的朋友证号。
//给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。
//
//输入格式：
//输入第一行给出正整数N。随后一行给出N个正整数，数字间以空格分隔。题目保证所有数字小于10^4。
//
//输出格式：
//首先第一行输出给定数字中不同的朋友证号的个数；
//随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。
//
//输入样例：
//8
//123 899 51 998 27 33 36 12

//输出样例：
//4
//3 6 9 26
//注意：就是看看各位之和有几种可能 
//分析：
//在接收输入数据的时候就把该数字的每一位相加，并把结果插入一个set集合中。
//因为set是有序的(从小到大)、不重复的，所以set的size值就是输出的个数，
//set中的每一个数字即所有答案的数字序列
#include <iostream>
#include <set>
using namespace std;
int getfriendnum(int a)		//该函数的目的是得到一个数的各位之和； 
{
	int sum=0;
	while(a!=0)
	{
		sum+=a%10;
		a/=10;
	}
	return sum;
}
int main()
{
	int n;
	scanf("%d",&n);
	set<int>s;
	for(int i=0;i<n;i++)
	{
		int t;
		scanf("%d",&t);
		s.insert(getfriendnum(t)); 
	}
	printf("%d\n",s.size() );	
	for(auto it=s.begin() ;it!=s.end();it++ )
	{
//		原版 
//		if(it != s.begin()) printf(" ");
//        printf("%d", *it);
		printf("%s%d",it==s.begin() ? "":" ",*it);
	}
	return 0;
}

