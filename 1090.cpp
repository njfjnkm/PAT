//1090 危险品装箱 (25 分)
//集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。
//比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。
//
//本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。
//
//输入格式：
//输入第一行给出两个正整数：N (≤10^4)是成对的不相容物品的对数；M (≤100) 是集装箱货品清单的单数。
//
//随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第
//二块有 M 行，每行给出一箱货物的清单，格式如下：K G[1] G[2] ... G[K]
//其中 K (≤1000) 是物品件数，G[i] 是物品的编号。
//简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。
//
//输出格式：
//对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 Yes，否则输出 No。
//
//输入样例：
//6 3
//20001 20002
//20003 20004
//20005 20006
//20003 20001
//20005 20004
//20004 20006
//4 00001 20004 00002 20003
//5 98823 20002 20003 20006 10010
//3 12345 67890 23333
//输出样例：
//No
//Yes
//Yes

//分析：用map存储每一个货物的所有不兼容货物～在判断给出的一堆货物是否是相容的时候，
//判断任一货物的不兼容货物是否在这堆货物中～如果存在不兼容的货物，则这堆货物不能相容
//～如果遍历完所有的货物，都找不到不兼容的两个货物，则这堆货物就是兼容的～

#include <iostream>
#include <vector>
#include <map>
using namespace std;
int main() {
    int n, k, t1, t2;
    map<int,vector<int>> m;
    scanf("%d%d", &n, &k);
    for (int i = 0; i < n; i++) {
        scanf("%d%d", &t1, &t2);
        m[t1].push_back(t2);		//m[t]是vector<int>(动态数组),表示与编号为t的所有不相容货物的编号 
        m[t2].push_back(t1);
    }
    while (k--) 
	{
        int cnt, flag = 0, a[100000] = {0};	//a[]用于记录相关编号是否出现 
        scanf("%d", &cnt);			//cnt表示每箱的物品件数； 
        vector<int> v(cnt);			//初始化动态数组v，长度为cnt，自动初始化全为0；用于记录一箱内所有物品编号（因为要成对比较） 
        for (int i = 0; i < cnt; i++) 
		{
            scanf("%d", &v[i]);
            a[v[i]] = 1;			
        }
        for (int i = 0; i < v.size(); i++)
        {
		   for (int j = 0; j < m[v[i]].size(); j++)		//两个集合之间是否存在交集，存在flag=1；否则flag=0； 
            if (a[m[v[i]][j]] == 1) flag = 1;
    	}
        printf("%s\n",flag ? "No" :"Yes");
    }
    return 0;
}

