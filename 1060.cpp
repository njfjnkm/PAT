//1060 爱丁顿数 (25 分)
//英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” E ，
//即满足有 E 天骑车超过 E 英里的最大整数 E。据说爱丁顿自己的 E 等于87。
//
//现给定某人 N 天的骑车距离，请你算出对应的爱丁顿数 E（≤N）。
//
//输入格式：
//输入第一行给出一个正整数 N (≤10^5)，即连续骑车的天数；第二行给出 N 个非负整数，代表每天的骑车距离。
//
//输出格式：
//在一行中给出 N 天的爱丁顿数。
//
//输入样例：
//10
//6 7 6 9 3 10 8 2 7 8

//输出样例：
//6

//错误分析：
//
//1.思路错误，一开始认为E必须满足数据中所有大于E的天数是E，结果发现不一定，
//类似（5）（10 10 10 10 5）这种就会没有答案（应该是4），
//所以如果有X天大于E，则E有可能小于X。
#include <stdio.h>
int main()
{
	int n;
	scanf("%d",&n);
	int a[n]; 
	for(int i=0;i<n;i++)
		scanf("%d",&a[i]);
	for(int i=n;i>=0;i--)
	{
		int count=0;
		for(int j=0;j<n;j++)
		{
			if(a[j]>i)	count++;
		}
		if(count>=i)			//注意if(count==i)错误 题干《满足有 E 天骑车超过 E 英里的最大整数 E。》是满足有而不是总共有 
		{
			printf("%d\n",i);
			break;
		}
	}
	return 0;
}

